AWSTemplateFormatVersion: "2010-09-09"
Description: Automated Meeting Scribe and Summarizer Template

Parameters:
  Email:
    Description:
      This address is used to send meeting transcripts, summaries, action
      items, etc.
    Type: String
    AllowedPattern: ^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$

Resources:
  BuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Source:
        Type: GITHUB
        Location: https://github.com/aws-samples/automated-meeting-scribe-and-summarizer.git
        BuildSpec: !Sub
          - |
            version: 0.2
            phases:
              install:
                runtime-versions:
                  nodejs: 20
                commands:
                  - npm install -g aws-cdk
              pre_build:
                commands:
                  - cdk bootstrap --require-approval never
                  - npm install
              build:
                commands:
                  - cdk synth
              post_build:
                commands:
                  - cdk deploy --all --require-approval never --context email=${Email}
          - { Email: !Ref Email }
      # SourceVersion: dev
      Environment:
        Type: ARM_CONTAINER
        Image: aws/codebuild/amazonlinux-aarch64-standard:3.0
        ComputeType: BUILD_GENERAL1_SMALL
      ServiceRole: !GetAtt BuildRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS

  BuildCustomResourceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: BuildPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource:
                  - "*"

  BuildCustomResourceFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Role: !GetAtt BuildCustomResourceRole.Arn
      Timeout: 900
      Runtime: python3.12
      Code:
        ZipFile: !Sub |
          import boto3
          from time import sleep
          import cfnresponse
          def handler(event, context):
            request_type = event['RequestType']
            print(request_type)
            if request_type in ['Create', 'Update']:
              client = boto3.client("codebuild")
              build_id = client.start_build(
                projectName=event['ResourceProperties']['PROJECT']
              )['build']['id']
              # status = 'STARTING'
              # while status != 'SUCCEEDED':
              #   if status in ['FAILED', 'FAULT', 'TIMED_OUT', 'STOPPED']:
              #     cfnresponse.send(event, context, cfnresponse.FAILED, {})
              #     return
              #   sleep(15)
              #   status = client.batch_get_builds(ids=[build_id])['builds'][0]['buildStatus']
              #   print(status)
            cfnresponse.send(event, context, cfnresponse.SUCCESS, {})

  BuildCustomResource:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt BuildCustomResourceFunction.Arn
      PROJECT: !Ref BuildProject
